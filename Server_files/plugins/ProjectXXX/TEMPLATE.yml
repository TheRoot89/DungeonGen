# TODO: module 'events': spawning enemies, redstone stuff, appearing blocks
# description of this dungeon room as in "Loading XX":
description: Template
# name of the schematic file used by this room (without .schematic):
schematic: entry
# Type of this room:  0: entry, 1: passageWay, 2: platformRoom, 3:battleRoom
type: 0


entry:
  # Pos of entry lower left "air" block, counted from the copy operation's first position:
  # Size of entry 'hole' fixed to 2x2 at the moment
  # Always looking east: X: forward, Y: up, Z: to the right
  placementLoc:
    ==: Vector
    x: 1.0
    y: 1.0
    z: 2.0
  # Where the door blocks should be generated (lower left air block)
  doorLoc:
    ==: Vector
    x: 1.0
    y: 1.0
    z: 2.0
  # dimensions of entry gate, always 2 at the moment:
  width: 2
  height: 2
  # type of the actual door opening and closing process: 
  # 0: appearing, 1: falling, 2: piston
  type: 0
  # the material of the door blocks being generated, only for type 0: 'appearing', Check API whether this exists!
  doorMaterial: smooth_brick
  # location for redstone to close mechanical doors. Has to be present upon schematic save.
  redstoneLoc:
    ==: Vector
    x: 1.0
    y: 1.0
    z: 2.0

exit:
  # Direc: South=0, East=270, North=180, West=90:
  initDirec: 270
  # Pos of exit lower left "air" block, counted from the copy operation's first position
  # lower left in the direction looking 'out' of the module from the inside
  placementLoc:
    ==: Vector
    x: 7.0
    y: 1.0
    z: 2.0
  # Where the door blocks should be generated (lower left air block)
  doorLoc:
    ==: Vector
    x: 7.0
    y: 1.0
    z: 2.0
  # dimensions of exit gate, always 2 at the moment:
  width: 2
  height: 2
  # type of the actual door opening and closing process: 
  # 0: appearing, 1: falling, 2: piston
  type: 0
  # the material of the door blocks being generated, only for type '0' and '1', Check API whether this exists!
  doorMaterial: smooth_brick
  # location for redstone to close mechanical doors, as many as needed
  redstoneLoc:
    ==: Vector
    x: 1.0
    y: 1.0
    z: 2.0


# PassageWays only: respawn location for dead players:
respawnLoc:
  ==: Vector
  x: 2.0
  y: 1.0
  z: 3.0

# BattleRooms only: Angaben zu Gegnergruppen:
battle:

group1:
  type: CREEPER
  count: 3
  isTarget: yes
  spawnInterval: -1
  # Spawn-Region dieser Gruppe, beide Punkte gleich wenn ein Punkt
  spawnRegion:
    corner1:
      ==: Vector
      x: 4.0
      y: 21.0
      z: 4.0
    corner2:
      ==: Vector
      x: 4.0
      y: 21.0
      z: 4.0  
    
group2:
  type: CREEPER
  count: 3
  isTarget: yes
  spawnInterval: -1
  # Spawn-Region dieser Gruppe, beide Punkte gleich wenn ein Punkt
  spawnRegion:
    corner1:
      ==: Vector
      x: 0.0
      y: 0.0
      z: 0.0
    corner2:
      ==: Vector
      x: 0.0
      y: 0.0
      z: 0.0  
    
# PlatformRooms only:
# Zielgebiet, dass die Spieler erreichen muessen:
targetRegCorner1:
  ==: Vector
  x: 41.0
  y: 1.0
  z: 1.0
targetRegCorner2:
  ==: Vector
  x: 42.0
  y: 1.0
  z: 2.0

# Nur wenn ein periodisch aktivierter Redstone-Schaltkreis benoetigt wird:
# Zeit in ticks: 20 ticks sind etwa 1 sec
powerBlockLoc:
  ==: Vector
  x: 7.0
  y: 25.0
  z: 4.0
onTimeTicks: 20
offTimeTicks: 400