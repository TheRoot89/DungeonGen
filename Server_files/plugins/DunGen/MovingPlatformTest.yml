# description of this dungeon room as in "Loading XX":
description: the test of a super cool platform...
# name of the schematic file used by this room (without .schematic):
schematic: MovingPlatformTest
# Type of this room:  0: entry, 1: passageWay, 2: platformRoom, 3:battleRoom
type: PLATFORMROOM


entry:
  # Pos of entry lower left "air" block, counted from the copy operation's first position:
  # Size of entry 'hole' fixed to 2x2 at the moment
  # Always looking east: X: forward, Y: up, Z: to the right
  placementLoc:
    ==: Vector
    x: 0.0
    y: 3.0
    z: 7.0
  # Where the door blocks should be generated (lower left air block)
  doorLoc:
    ==: Vector
    x: 0.0
    y: 3.0
    z: 7.0
  # dimensions of entry gate, always 2 at the moment:
  width: 2
  height: 2

exit:
  # Direc: South=0, East=270, North=180, West=90:
  initDirec: 270
  # Pos of exit lower left "air" block, counted from the copy operation's first position
  # lower left in the direction looking 'out' of the module from the inside
  placementLoc:
    ==: Vector
    x: 44.0
    y: 3.0
    z: 7.0
  # Where the door blocks should be generated (lower left air block)
  doorLoc:
    ==: Vector
    x: 44.0
    y: 3.0
    z: 7.0
  # dimensions of exit gate, always 2 at the moment:
  width: 2
  height: 2


# PlatformRooms only:
# Zielgebiet, dass die Spieler erreichen muessen:
targetRegCorner1:
  ==: Vector
  x: 40.0
  y: 2.0
  z: 8.0
targetRegCorner2:
  ==: Vector
  x: 43.0
  y: 3.0
  z: 6.0


# Rooms only: tasks to be carried out after placement:
tasks:
  task1:
    type: ENTITYSPAWN   # type of this task, ENTITYSPAWN, BLOCKSPWAN, EMPOWER or DEPOWER
    delay: 0.1          # delay to start this task [s]
    period: 0.0         # periodicity of this task [s]
    executionCount: 1 # number of times this task shall be executed, has to be an integer
    # Region dieses Tasks, beide Punkte gleich wenn ein Punkt:
    regionCorner1:
      ==: Vector
      x: 22.0
      y: 3.0
      z: 10.0
    regionCorner2:
      ==: Vector
      x: 19.0
      y: 3.0
      z: 12.0 
       
    # EntitySpawn only:
    # Spawns the entity type periodically and randomly in the target region in the given number.
    # Will not increase beyond the maximum number allowed.
    entityType: PIG_ZOMBIE
    count: 3        # number of entities to spawn
    maxCount: 20    # maximum number of these entities alive concurently if spawned periodically
    isTarget: false  # whether all of these have to be dead at the same time to succeed.


  task2:
    type: ENTITYSPAWN   # type of this task, ENTITYSPAWN, BLOCKSPWAN, EMPOWER or DEPOWER
    delay: 0.1          # delay to start this task [s]
    period: 0.0         # periodicity of this task [s]
    executionCount: 1 # number of times this task shall be executed, has to be an integer
    # Region dieses Tasks, beide Punkte gleich wenn ein Punkt:
    regionCorner1:
      ==: Vector
      x: 27.0
      y: 2.0
      z: 5.0
    regionCorner2:
      ==: Vector
      x: 28.0
      y: 2.0
      z: 1.0 
       
    # EntitySpawn only:
    # Spawns the entity type periodically and randomly in the target region in the given number.
    # Will not increase beyond the maximum number allowed.
    entityType: CREEPER
    count: 2        # number of entities to spawn
    maxCount: 20    # maximum number of these entities alive concurently if spawned periodically
    isTarget: false  # whether all of these have to be dead at the same time to succeed.

  task3:
    type: ENTITYSPAWN   # type of this task, ENTITYSPAWN, BLOCKSPWAN, EMPOWER or DEPOWER
    delay: 0.1          # delay to start this task [s]
    period: 0.0         # periodicity of this task [s]
    executionCount: 1 # number of times this task shall be executed, has to be an integer
    # Region dieses Tasks, beide Punkte gleich wenn ein Punkt:
    regionCorner1:
      ==: Vector
      x: 35.0
      y: 4.0
      z: 10.0
    regionCorner2:
      ==: Vector
      x: 36.0
      y: 4.0
      z: 12.0 
       
    # EntitySpawn only:
    # Spawns the entity type periodically and randomly in the target region in the given number.
    # Will not increase beyond the maximum number allowed.
    entityType: SKELETON
    count: 1        # number of entities to spawn
    maxCount: 20    # maximum number of these entities alive concurently if spawned periodically
    isTarget: false  # whether all of these have to be dead at the same time to succeed.


  task4:
    type: BLOCKSPAWN
    delay: 4.0
    period: 2.5
    executionCount: 31
    regionCorner1:
      ==: Vector
      x: 10.0
      y: 2.0
      z: 6.0
    regionCorner2:
      ==: Vector
      x: 10.0
      y: 2.0
      z: 9.0
      
    # BlockSpawn only:
    # Will spawn the the designated block type in the target region. Increments the positionsing every period.
    blockType: GLASS
    incrementVector:
      ==: Vector
      x: 1.0
      y: 0.0
      z: 0.0

  task5:
    type: BLOCKSPAWN
    delay: 3.0
    period: 2.3
    executionCount: 35
    regionCorner1:
      ==: Vector
      x: 4.0
      y: 2.0
      z: 6.0
    regionCorner2:
      ==: Vector
      x: 4.0
      y: 2.0
      z: 9.0
      
    # BlockSpawn only:
    # Will spawn the the designated block type in the target region. Increments the positionsing every period.
    blockType: AIR
    incrementVector:
      ==: Vector
      x: 1.0
      y: 0.0
      z: 0.0